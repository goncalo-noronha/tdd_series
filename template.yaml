AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >

  github.com/goncalo-noronha/tdd_series

  TDD Series learning course

#####  Globals for Lambda functions #####
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        Region: "eu-west-1"

#####  Input Parameters #####
Parameters:
  Stage:
    Type: String
    Description: Parameter for getting the deployment stage
    Default: default

#####  Environment Variables #####
Mappings:
  StagesMap:
    sandbox:
      VariableName: Value
    production:
      VariableName: Value


#####  Template Conditions #####
Conditions:
  CreateSandboxResources: !Equals [ !Ref Stage, sandbox ]

Resources:
  #####  Lambda Fuctions #####
  AppointmentsPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/package/
      Handler: appointments-post
      Runtime: go1.x
      MemorySize: 128
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /appointments
            Method: POST
  AppointmentsListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/package/
      Handler: appointments-list
      Runtime: go1.x
      MemorySize: 128
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /appointments
            Method: GET
  AppointmentsGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/package/
      Handler: appointments-get
      Runtime: go1.x
      MemorySize: 128
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /appointments/{id}
            Method: GET
  AppointmentsDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./build/package/
      Handler: appointments-delete
      Runtime: go1.x
      MemorySize: 128
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /appointments/{id}
            Method: DELETE
  #####  Dynamo DB tables #####
  AppointmentsDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'Appointments'
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true


Outputs:
  AppointmentsPostApi:
    Description: "API Gateway endpoint URL to create a new Appointment"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/appointments"
  AppointmentsListApi:
    Description: "API Gateway endpoint URL to list all Appointments"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/appointments"
  AppointmentsGetApi:
    Description: "API Gateway endpoint URL to retrieve an Appointment by identifier"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/appointments/{id}"
  AppointmentsDeleteApi:
    Description: "API Gateway endpoint URL to delete an Appointment by identifier"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/appointments/{id}"
